// Production-ready Firestore Security Rules for EduTrack Liberian SIS
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Helper function to check if user is teacher
    function isTeacher() {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'TEACHER';
    }

    // Helper function to check if user is student
    function isStudent() {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'STUDENT';
    }

    // Users collection - Secure user profile management
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null &&
                       (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Students collection - Role-based access
    match /students/{studentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null && (isAdmin() || isTeacher());
      allow delete: if isAdmin();
    }

    // Teachers collection - Admin and self-management
    match /teachers/{teacherId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && isAdmin();
      allow update: if request.auth != null &&
                       (isAdmin() ||
                        (isTeacher() && resource.data.userId == request.auth.uid));
      allow delete: if isAdmin();
    }

    // Classes collection - Educational content access
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null && (isAdmin() || isTeacher());
      allow delete: if isAdmin();
    }

    // Subjects collection - Curriculum management
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null && (isAdmin() || isTeacher());
      allow delete: if isAdmin();
    }

    // Grades collection - Academic records
    match /grades/{gradeId} {
      allow read: if request.auth != null &&
                     (isAdmin() || isTeacher() ||
                      (isStudent() && resource.data.studentId == request.auth.uid));
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null && (isAdmin() || isTeacher());
      allow delete: if isAdmin();
    }

    // Point transactions - Behavioral tracking
    match /pointTransactions/{transactionId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null && (isAdmin() || isTeacher());
      allow delete: if isAdmin();
    }

    // Messages - Communication system
    match /messages/{messageId} {
      allow read: if request.auth != null &&
                     (resource.data.senderId == request.auth.uid ||
                      resource.data.recipientId == request.auth.uid ||
                      isAdmin());
      allow create: if request.auth != null;
      allow update: if request.auth != null &&
                       (resource.data.senderId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }

    // Events - School calendar
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null && (isAdmin() || isTeacher());
      allow delete: if isAdmin();
    }

    // Resources - Educational materials
    match /resources/{resourceId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (isAdmin() || isTeacher());
      allow update: if request.auth != null &&
                       (isAdmin() ||
                        (isTeacher() && resource.data.uploadedBy == request.auth.uid));
      allow delete: if request.auth != null &&
                       (isAdmin() ||
                        (isTeacher() && resource.data.uploadedBy == request.auth.uid));
    }
  }
}